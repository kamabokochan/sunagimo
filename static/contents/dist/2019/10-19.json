{
  "bodyContent": "# nuxtjs/markdownitでブログを作った\n\n2019/10/19\n\n## markdownit\n[markdown-it.github.io](https://markdown-it.github.io/markdown-it/)\n\nmarkdownitは markdown => html の変換を行ってくれるparserです。\n\n### install\n```bash\nyarn add @nuxtjs/markdownit\n```\n\n### nuxtconfigに追記する\n```javascript\n...\nmodules: [\n  '@nuxtjs/markdownit'\n]\n...\n```\n\n### vueファイルにMarkdownを書いていく\n```temp\n<template lang=\"md\">\n  ...\n</template>\n```\n\n## highlight.jsを入れる\n[https://highlightjs.org/](https://highlightjs.org/)\n\n### install\n```bash\nyarn add highlight.js\n```\n\n### nuxtconfigに追記する\n```javascript\n...\ncss: [ // お好みのテーマで\n  '~/node_modules/highlight.js/styles/hopscotch.css'\n]\n...\nmarkdownit: {\n  // injected: true,\n  breaks: true,\n  langPrefix: \"hljs language-\", // コードブロックのCSSクラス名の接頭辞に付加\n  linkify: true,\n  highlight: (str: any, lang: any) => {\n    const hljs = require('highlight.js');\n    if (lang) {\n      try {\n        return hljs.highlight(lang, str, true).value;\n      } catch (err) { }\n    }\n    // 言語設定がなければplaintextを適用\n    return hljs.highlight('plaintext', str, true).value;\n  }\n}\n...\n```\n\nlangPrefixにhljsを入れておかないと、背景色が適用されない。\n参照: [https://github.com/jonschlinkert/remarkable/issues/131](https://github.com/jonschlinkert/remarkable/issues/131)\n\nこれで以下のようにコードにハイライトがつくようになります。やったね！\njavascript\n```javascript\nconst dog: string = 'pochi'\n```\n\ntypescriptもあるよ！\n\ntypescript\n```typescript\nconst dog: string = 'pochi'\n```",
  "bodyHtml": "<h1>nuxtjs/markdownitでブログを作った</h1>\n<p>2019/10/19</p>\n<h2>markdownit</h2>\n<p><a href=\"https://markdown-it.github.io/markdown-it/\">markdown-it.github.io</a></p>\n<p>markdownitは markdown =&gt; html の変換を行ってくれるparserです。</p>\n<h3>install</h3>\n<pre><code class=\"hljs\">yarn add @nuxtjs/markdownit</code></pre><h3>nuxtconfigに追記する</h3>\n<pre><code class=\"hljs\">...\nmodules: [\n  <span class=\"hljs-string\">'@nuxtjs/markdownit'</span>\n]\n...</code></pre><h3>vueファイルにMarkdownを書いていく</h3>\n<pre><code class=\"hljs\">&lt;template lang=\"md\"&gt;\n  ...\n&lt;/template&gt;</code></pre><h2>highlight.jsを入れる</h2>\n<p><a href=\"https://highlightjs.org/\">https://highlightjs.org/</a></p>\n<h3>install</h3>\n<pre><code class=\"hljs\">yarn add highlight.js</code></pre><h3>nuxtconfigに追記する</h3>\n<pre><code class=\"hljs\">...\ncss: [ <span class=\"hljs-comment\">// お好みのテーマで</span>\n  <span class=\"hljs-string\">'~/node_modules/highlight.js/styles/hopscotch.css'</span>\n]\n...\nmarkdownit: {\n  <span class=\"hljs-comment\">// injected: true,</span>\n  breaks: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">langPrefix</span>: <span class=\"hljs-string\">\"hljs language-\"</span>, <span class=\"hljs-comment\">// コードブロックのCSSクラス名の接頭辞に付加</span>\n  linkify: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">highlight</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">str: any, lang: any</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> hljs = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'highlight.js'</span>);\n    <span class=\"hljs-keyword\">if</span> (lang) {\n      <span class=\"hljs-keyword\">try</span> {\n        <span class=\"hljs-keyword\">return</span> hljs.highlight(lang, str, <span class=\"hljs-literal\">true</span>).value;\n      } <span class=\"hljs-keyword\">catch</span> (err) { }\n    }\n    <span class=\"hljs-comment\">// 言語設定がなければplaintextを適用</span>\n    <span class=\"hljs-keyword\">return</span> hljs.highlight(<span class=\"hljs-string\">'plaintext'</span>, str, <span class=\"hljs-literal\">true</span>).value;\n  }\n}\n...</code></pre><p>langPrefixにhljsを入れておかないと、背景色が適用されない。\n参照: <a href=\"https://github.com/jonschlinkert/remarkable/issues/131\">https://github.com/jonschlinkert/remarkable/issues/131</a></p>\n<p>これで以下のようにコードにハイライトがつくようになります。やったね！\njavascript</p>\n<pre><code class=\"hljs\"><span class=\"hljs-keyword\">const</span> dog: string = <span class=\"hljs-string\">'pochi'</span></code></pre><p>typescriptもあるよ！</p>\n<p>typescript</p>\n<pre><code class=\"hljs\"><span class=\"hljs-keyword\">const</span> dog: <span class=\"hljs-built_in\">string</span> = <span class=\"hljs-string\">'pochi'</span></code></pre>",
  "title": "nuxtjs/markdownitでブログを作った",
  "dir": "contents/dist/2019",
  "base": "10-19.json",
  "ext": ".json",
  "sourceBase": "10-19.md",
  "sourceExt": ".md"
}